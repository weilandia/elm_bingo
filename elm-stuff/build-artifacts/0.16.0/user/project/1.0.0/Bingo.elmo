Elm.Bingo = Elm.Bingo || {};
Elm.Bingo.make = function (_elm) {
   "use strict";
   _elm.Bingo = _elm.Bingo || {};
   if (_elm.Bingo.values) return _elm.Bingo.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "NoOp") {
            return model;
         } else {
            return _U.update(model,{entries: A2($List.sortBy,function (_) {    return _.points;},model.entries)});
         }
   });
   var Sort = {ctor: "Sort"};
   var NoOp = {ctor: "NoOp"};
   var entryItem = function (entry) {
      return A2($Html.li,
      _U.list([]),
      _U.list([A2($Html.span,_U.list([$Html$Attributes.$class("phrase")]),_U.list([$Html.text(entry.phrase)]))
              ,A2($Html.span,_U.list([$Html$Attributes.$class("points")]),_U.list([$Html.text($Basics.toString(entry.points))]))]));
   };
   var entryList = function (entries) {    return A2($Html.ul,_U.list([]),A2($List.map,entryItem,entries));};
   var pageFooter = A2($Html.footer,
   _U.list([]),
   _U.list([A2($Html.a,_U.list([$Html$Attributes.href("https://weilandia.github.io")]),_U.list([$Html.text("Nick Weiland")]))]));
   var title = F2(function (message,times) {
      return $Html.text($String.trimRight(A2($String.repeat,times,$String.toUpper(A2($Basics._op["++"],message," ")))));
   });
   var pageHeader = A2($Html.h1,_U.list([]),_U.list([A2(title,"bingo",3)]));
   var view = function (model) {
      return A2($Html.div,_U.list([$Html$Attributes.id("container")]),_U.list([pageHeader,entryList(model.entries),pageFooter]));
   };
   var newEntry = F3(function (phrase,points,id) {    return {phrase: phrase,points: points,wasSpoken: false,id: id};});
   var initialModel = {entries: _U.list([A3(newEntry,"Doing Agile",200,2),A3(newEntry,"In the cloud",300,3)])};
   var main = view(A2(update,Sort,initialModel));
   return _elm.Bingo.values = {_op: _op
                              ,newEntry: newEntry
                              ,initialModel: initialModel
                              ,title: title
                              ,pageHeader: pageHeader
                              ,pageFooter: pageFooter
                              ,entryItem: entryItem
                              ,entryList: entryList
                              ,view: view
                              ,NoOp: NoOp
                              ,Sort: Sort
                              ,update: update
                              ,main: main};
};